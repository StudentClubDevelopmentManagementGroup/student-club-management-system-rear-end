<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team.project.module.club.personnelchanges.internal.mapper.TblUserClubMapper">

    <resultMap id="UserMsgDTO" type="team.project.module.club.personnelchanges.internal.model.datatransfer.UserMsgDTO">
        <!-- 数据库字段 -->                  <!-- java 类属性 -->
        <result column="user_id"           property="userId" />
    </resultMap>

    <resultMap id="clubMemberInfo" type="team.project.module.club.personnelchanges.internal.model.datatransfer.ClubMemberInfoDTO">
        <!-- 数据库字段 -->                  <!-- java 类属性 -->
        <result column="user_id"           property="userId" />
        <result column="department_id"     property="departmentId" />
        <result column="mail"              property="email" />
    </resultMap>

    <update id="createManager">
        insert into tbl_user_club (role, user_id, club_id)
        values (2, #{userId}, #{clubId})
    </update>

    <update id="setManager">
        update tbl_user_club set role = role | 2
        where user_id = #{userId} and club_id = #{clubId} and is_deleted = 0 and role &amp; 2
    </update>

    <update id="quashManager">
        update tbl_user_club set role = role &amp; ~2
        where user_id = #{userId} and club_id = #{clubId} and is_deleted = 0 and role &amp; 2
    </update>

    <update id="quashMember">
        update tbl_user_club set is_deleted = 1 where user_id = #{userId} and club_id = #{clubId} and is_deleted = 0
    </update>

    <select id="selectManagerRole" resultType="team.project.module.club.management.internal.model.entity.TblUserClubDO">
        select * from tbl_user_club where user_id = #{userId} and club_id = #{clubId} and role &amp; 2
    </select>

    <select id="selectOne"
            resultType="team.project.module.club.management.internal.model.entity.TblUserClubDO">
    </select>

    <select id="selectRootROle" resultType="team.project.module.club.management.internal.model.entity.TblUserClubDO"
            parameterType="java.lang.String">
    </select>

    <select id="selectMemberRole" resultType="team.project.module.club.management.internal.model.entity.TblUserClubDO"
            parameterType="java.lang.String">
    </select>

    <select id="selectClubMember" resultMap="UserMsgDTO">
        select user_id from tbl_user_club where club_id = #{clubId} and is_deleted = 0
    </select>

    <!-- review by ljh 2024-04-29 TODO 添加说明、修改 SQL -->
    <select id="selectClubMemberInfo" resultMap="clubMemberInfo">
        SELECT u.user_id, u.department_id, u.name, u.tel, u.mail, u.role,uc.role AS ucrole
        FROM tbl_user u
        JOIN tbl_user_club uc ON u.user_id = uc.user_id
        WHERE uc.club_id = #{clubId} AND uc.is_deleted = 0 <!-- 此处遗漏了对 tbl_user 的逻辑删除的判断 -->
        <if test="name != ''"> <!-- 此处遗漏了对 name != null 的判断，如果 name 不需判断 null，为何 departmentId 需要？ -->
            AND u.name like concat('%',#{name},'%')
        </if>
        <if test="departmentId != 0 and departmentId != null ">
            AND u.department_id = #{departmentId}
        </if>
        <!-- review by ljh 2024-04-29

        说明：
        此 SQL 级联查询 tbl_user_club 表和 tbl_user 表
        tbl_user 表由 user 模块维护管理，而非本模块，故此查询属于跨模块表查询
        本模块自行保证 SQL 结果的数据一致性
        如果 tbl_user 表有更新，本模块自行负责同步跟进此 SQL

        建议改成：
        SELECT tbl_user_club.*, tbl_user.name
        FROM   tbl_user_club
        JOIN   tbl_user
        ON     tbl_user_club.user_id = tbl_user.user_id
        WHERE  club_id = #{clubId}
        AND    tbl_user_club.is_deleted = 0
        AND    tbl_user.is_deleted = 0
        <if test="departmentId != null and departmentId != 0">
        AND    tbl_user.department_id = #{departmentId} </if>
        <if test="name != null and name != ''">
        AND    name LIKE CONCAT('%', #{name},'%') </if>
        -->
    </select>

    <!--     TODO xml文件加上逻辑删除
    思路：删除社员用使用逻辑删除，所有社员的查询均带上排除逻辑删除条件-->

    <insert id="createMember">
        insert into tbl_user_club (role, user_id, club_id)
        values (1, #{userId}, #{clubId})
    </insert>
</mapper>
